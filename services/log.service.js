import chalk from 'chalk';
import dedent from 'dedent-js';


const printError = (error) => {
	console.log(chalk.bgRed(` error: ${error}`));
};

const printSuccess = (message) => {
	console.log(chalk.bgGreen(` message: ${message}`));
};

const printHelp = () => {
	console.log(
		dedent(`${chalk.bgCyan(' Help ')}
		Without params - output weather
		-s [CITY] to setup the city
		-h for help
		-t [API_KEY] to setup the API_KEY
		-ntf [NUMBER] to setup the frequency of checking weather in hours
		-lang [LANGUAGE] to set up the language
			ðŸ‡¦ðŸ‡± sq Albanian
			ðŸ‡¿ðŸ‡¦ af Afrikaans
			ðŸ‡¦ðŸ‡ª ar Arabic
			ðŸ‡¦ðŸ‡¿ az Azerbaijani
			ðŸ‡ªðŸ‡¸ eu Basque
			ðŸ‡§ðŸ‡¾ be Belarusian
			ðŸ‡§ðŸ‡¬ bg Bulgarian
			ðŸ‡ªðŸ‡¸ ca Catalan
			ðŸ‡¨ðŸ‡³ zh_cn Chinese Simplified
			ðŸ‡¹ðŸ‡¼ zh_tw Chinese Traditional
			ðŸ‡­ðŸ‡· hr Croatian
			ðŸ‡¨ðŸ‡¿ cz Czech
			ðŸ‡©ðŸ‡° da Danish
			ðŸ‡³ðŸ‡± nl Dutch
			ðŸ‡¬ðŸ‡§ en English
			ðŸ‡«ðŸ‡® fi Finnish
			ðŸ‡«ðŸ‡· fr French
			ðŸ‡ªðŸ‡¸ gl Galician
			ðŸ‡©ðŸ‡ª de German
			ðŸ‡¬ðŸ‡· el Greek
			ðŸ‡®ðŸ‡± he Hebrew
			ðŸ‡®ðŸ‡³ hi Hindi
			ðŸ‡­ðŸ‡º hu Hungarian
			ðŸ‡®ðŸ‡¸ is Icelandic
			ðŸ‡®ðŸ‡© id Indonesian
			ðŸ‡®ðŸ‡¹ it Italian
			ðŸ‡¯ðŸ‡µ ja Japanese
			ðŸ‡°ðŸ‡· kr Korean
			ðŸ‡¹ðŸ‡· ku Kurmanji (Kurdish)
			ðŸ‡±ðŸ‡» la Latvian
			ðŸ‡±ðŸ‡¹ lt Lithuanian
			ðŸ‡²ðŸ‡° mk Macedonian
			ðŸ‡³ðŸ‡´ no Norwegian
			ðŸ‡®ðŸ‡· fa Persian (Farsi)
			ðŸ‡µðŸ‡± pl Polish
			ðŸ‡µðŸ‡¹ pt Portuguese
			ðŸ‡§ðŸ‡· pt_br PortuguÃªs Brasil
			ðŸ‡·ðŸ‡´ ro Romanian
			ðŸ‡·ðŸ‡º ru Russian
			ðŸ‡·ðŸ‡¸ sr Serbian
			ðŸ‡¸ðŸ‡° sk Slovak
			ðŸ‡¸ðŸ‡® sl Slovenian
			ðŸ‡ªðŸ‡¸ sp, es Spanish
			ðŸ‡¸ðŸ‡ª sv, se Swedish
			ðŸ‡¹ðŸ‡­ th Thai
			ðŸ‡¹ðŸ‡· tr Turkish
			ðŸ‡ºðŸ‡¦ ua, uk Ukrainian
			ðŸ‡»ðŸ‡³ vi Vietnamese
			ðŸ‡¿ðŸ‡¦ zu Zulu
`)
	
	);
};

const printWeather = (res, icon) => {
	console.log(
		dedent(`${chalk.bgYellow(' Weather ')} Weather in the city ${res.name}
		${icon} ${res.weather[0].description}
		Temperature: ${res.main.temp}Â°C (Feel like: ${res.main.feels_like}Â°C)
		Humidity: ${res.main.humidity}%
		Wind speed: ${res.wind.speed} m/s
		`)
	);
};

export {printError, printSuccess, printHelp, printWeather};